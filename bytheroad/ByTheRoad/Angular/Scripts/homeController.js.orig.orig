(function () {
    angular
        .module('byTheRoad')
        .controller('homeController', function ($scope, $route, $location, $http, mapService, roadService, locationService, $window) {
            var self = this;
            var searchBox;
           
            self.hasError = false;
            self.errorMessage = '';
            self.registering = false;
            self.loggingin = false;
            self.start = false;
            self.star = false;
            self.results = [];
            self.mobileSearch = false;
            self.viewingPlaces = false;
            self.animationResults = "animated slideInLeft";
            self.animationSaved = "animated slideOutLeft";
            self.getResults = function () {
                self.results = mapService.results;
            }

            self.init = function () {
                if ($window.sessionStorage.token) {
                }
            }
            self.init();
=======
            self.getResults = function () {
                self.results = mapService.results;
            }

            self.logoutbtn = false;
            self.mainbtn = false;
            self.value1 = false;
            self.value2 = false;
            self.value3 = false;
            self.minutebtn = false;
            self.hourbtn = false;
            self.milebtn = false;
            self.selected = false;
            self.clear = false;
<<<<<<< HEAD
            self.editUser = false;
=======




            self.findRoute = function () {
                locationService.findRouteAndDisplay(self.directions.destination, 0, function(response){
                    locationService.renderLines(response);
                })
            }


            self.login = function () {
                $http.post('/token', "grant_type=password&username=" + self.login.email + "&password=" + self.login.password,
                    {
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded'
                        }
                    })
                .success(function (data) {
                    token = data.access_token;
                    $http.defaults.headers.common['Authorization'] = 'bearer ' + token;
                    $window.sessionStorage.setItem("token", data.access_token);
                    
                    self.currentuser = self.login.FirstName;
                    self.currentEmail = self.login.email;
                    self.loggingin = false;
                    self.logoutbtn = true;
                    self.login.email = null;
                    self.login.password = null;
<<<<<<< HEAD
                    
=======

>>>>>>> f7c208b07cdfa9db3b5861e2f66fe665e94fcbf8

                })
                .error(function () {
<<<<<<< HEAD
                    console.error('Error loggin in.');
                    self.hasError = true;
                    self.errorMessage = "Error logging in";
                });
            };

            self.logout = function () {
                $http.post('api/Account/Logout')

               .success(function (data) {
<<<<<<< HEAD

                    self.logoutbtn = false;
                    console.log('success')
                })
                .error(function () {
                   console.error('Error loggin in.');

               });
=======


            self.register = function () {
                roadService.register(self.register);
            };


=======
                roadService.register(self.registerUser, function(){
                    self.currentuser = self.registerUser.email;
                    self.registering = false;
                    self.loggingin = false;
                    self.logoutbtn = true;
                    self.registerUser.email = null;
                    self.registerUser.Password = null;
                    self.registerUser.ConfirmPassword = null;
                }, function (error) {
                    self.hasError = true;
                    self.errorMessage = "Registration Error";
>>>>>>> 464626a91e9bb47a2c3229c8168f4c71dd1a241c

                });
            }

=======
                });
            }

>>>>>>> 612f1b547c4bd2874e4ee4fea41fda53fc17fb84
>>>>>>> f7c208b07cdfa9db3b5861e2f66fe665e94fcbf8

            self.nearbySearch = function () {
                self.runSearch(mapService.categorySearch);
            };

            self.textSearch = function () {
                self.runSearch(mapService.regTextSearch);
            }

            self.startInterval = function () {
                var checkResults = window.setInterval(function () {
                    if (self.results.length === 0 && self.results[0] !== 'none') {
                        self.getResults();
                        $scope.$apply();
                    } else {
                        console.log(self.results);
                        clearInterval(checkResults);
                    }
                }, 500);
            }

            self.runSearch = function (func) {
                var info = self.getUnitAndAmount();
                self.results = [];
                mapService.results = [];
                var spotOnRoute = locationService.findCurrentPosition();
                console.log("spot on route:", spotOnRoute);
                console.log("selectedRoute: ", locationService.selectedRoute);

                if (spotOnRoute) {
                    var searchPos = locationService.findFuturePosition(spotOnRoute, info.unit, info.amount);
                } else {
                    var searchPos = locationService.findGenericFuturePosition(info.unit, info.amount);
                }
                func(self, searchPos);
                self.startInterval();
                self.showResultsBox();
            }

            var input = document.getElementById('searchInputBox');

            var getSearchBox = window.setInterval(function () {
                console.log(google.maps.places);
                if (!(google.maps.places === undefined)) {
                    searchBox = new google.maps.places.SearchBox(input);
                    //setInitialSearchBoxBounds(searchBox);
                    self.setupListeners();
                    clearInterval(getSearchBox);
                    console.log(searchBox.getBounds());
                }
            }, 500);


            self.setupListeners = function () {

                // [START region_getplaces]
                // Listen for the event fired when the user selects a prediction and retrieve
                // more details for that place.
                searchBox.addListener('places_changed', function () {
                    var places = searchBox.getPlaces();

                    if (places.length === 0 || places[0].place_id === undefined) {
                        console.log(places[0].place_id)
                        return;
                    }
                    mapService.callback(places, google.maps.places.PlacesServiceStatus.OK);
                    self.startInterval();
                    self.showResultsBox();

                });
            };

            self.showResultsBox = function () {
                self.animationResults = "animated slideInLeft";
                self.animationSaved = "animated slideOutLeft";
            }

            self.getUnitAndAmount = function () {
                if (self.minutesUnit)
                    return { unit: "minutes", amount: self.minutesUnit };
                if (self.hoursUnit)
                    return { unit: "hours", amount: self.hoursUnit };
                if (self.milesUnit)
                    return { unit: "miles", amount: self.milesUnit };
            }
            self.getUnitAndAmount = function () {
                if (self.minutesUnit)
                    return { unit: "minutes", amount: self.minutesUnit };
                if (self.hoursUnit)
                    return { unit: "hours", amount: self.hoursUnit };
                if (self.milesUnit)
                    return { unit: "miles", amount: self.milesUnit };
>>>>>>> f7c208b07cdfa9db3b5861e2f66fe665e94fcbf8
            }
            self.toggleSavedBox = function () {
                if (self.animationSaved === 'animated slideInLeft') {
                    self.animationSaved = 'animated slideOutLeft';
                    self.animationResults = 'animated slideInLeft';
                } else {
                    self.animationSaved = 'animated slideInLeft';
                    self.animationResults = 'animated slideOutLeft';
                }
            }
            self.favPOI = function () {
                mapService.favPOI(self.poiToSave, self.chkState);
            }
            self.places = function () {
                mapService.listFavPOI();
                self.toggleSavedBox();
            }

            self.showLeftBox = function () {
                document.getElementById('leftBox').style.left = '0';
                document.getElementById('rightBox').style.left = '100%';
            }
<<<<<<< HEAD
    angular
        .module('byTheRoad')
        .directive('validNumber',function(){
            return {
                require: '?ngModel',
                link: function(scope, element, attrs, ngModelCtrl) {
                    if(!ngModelCtrl) {
                        return; 
                    }

                    ngModelCtrl.$parsers.push(function(val) {
                        var clean = val.replace( /[^0-9]+/g, '');
                        if (val !== clean) {
                            ngModelCtrl.$setViewValue(clean);
                            ngModelCtrl.$render();
                        }
                        return clean;
                    });
                    element.bind('keypress', function(event) {
                        if(event.keyCode === 32) {
                            event.preventDefault();
                        }
                    });
            };
=======
            self.showRightBox = function () {
                document.getElementById('leftBox').style.left = '-100%';
                document.getElementById('rightBox').style.left = '0';
            }
        });

})();
